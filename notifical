#!/bin/bash

set -u
set -e

# User variables
declare calendar=$(cal 2022 -n 3 -m --color=never)
declare -a targetDates

# Script variables
#declare -r today=$(date "+%d/%m")
declare -a months days targetDatesNames targetDatesNumbers
declare week output=""

colorize() {
  local color="$1"

  parse_target_day targetDates

  for ((i = 0; i < ${#months[@]}; i++)); do
      for ((j = 0; j < ${#targetDates[@]}; j++)); do
          mon=$(echo -n "${months[$i]}" | awk '{print $1}')
	  if [[ "$mon" == "${targetDatesNames[j]}" ]]; then
	      sedComm="s/\<${targetDatesNumbers[j]}\>/<b><span color=\\\\\"$color\\\\\">${targetDatesNumbers[j]}<\/span><\/b>/"
	      days[$i]=$(echo "${days[$i]}" | sed "$sedComm")
          fi
      done
  done
  
  unset targetDates targetDatesNames targetDatesNumbers
}

# '00001115 = November 15 0000'
parse_target_day() {
  local formatDate temp targetDatesTemp
  for (( i = 0; i < ${#targetDates[@]}; i++)); do
    IFS='/' read -a temp <<< ${targetDates[$i]}

    # Reverse array from mm/dd to dd/mm
    aux=${temp[0]#0}
    temp[0]=${temp[1]}
    temp[1]=$(printf "%02d" "$aux")
    targetDatesTemp[$i]=${temp[*]}
  done
  
  for (( i = 0; i < ${#targetDatesTemp[@]}; i++)); do
    formatDates+=($(echo "0000${targetDatesTemp[$i]}" | sed 's/ //g'))
  done

  for (( i = 0; i < ${#formatDates[@]}; i++)); do
    targetDatesNames[$i]=$(date -d "${formatDates[$i]}" '+%B %d' | awk '{print $1}')
    targetDatesNumbers[$i]=$((10#$(echo "${targetDatesTemp[$i]}" | awk ' { print $2 } ') + 0))
  done

  unset temp
}

trim_months() {
  months=$(
    echo -n "$1" | head -1 |
    sed 's/^[[:space:]]*//' | rev | sed 's/   */,/2g' | rev
  ) && IFS=',' read -a months <<<$months
}

trim_week() {
  week=$(echo "$1" | sed -n "2p" | cut -c 1-20)
}

trim_n_days() {
  local temp=$(echo "$1" | tail -n +3) range=22

  for i in $(seq 1 $((${#months[@]}))); do
    days[i - 1]=$(
      echo "$temp" |
      awk -v i="$i" -v j="$range" '{ print substr($0, 1+j*(i-1), 21) }'
    )
  done
}

format_calendar() {
  trim_months "$calendar"
  trim_week "$calendar"
  trim_n_days "$calendar"
}

format_output() {
    local line_count=$(echo "${days[0]}" | wc -l | awk '{ print $1 }')
    local output_months output_month="" output_week="" output_days=""
    local whitespace_separator="    "

    # Get boundaries into variable and print the first line MONTHS
    for (( i = 0; i < ${#months[@]}; i++)); do

	# Format month section
	local trailing_whitespace="" leading_whitespace=""
	local month_length=$(echo "${months[$i]}" | xargs) week_length="${#week}"

	for (( j = 0; j < "${#month_length}"/4+1; j++ )); do
	    trailing_whitespace="$trailing_whitespace "
	done

	month_length="$trailing_whitespace$month_length" && month_length="${#month_length}"
	local leading_whitespace_length=$(($week_length - $month_length))

	for (( j = 0; j < leading_whitespace_length; j++ )); do
	    leading_whitespace="$leading_whitespace "
	done

	output_month="$trailing_whitespace${months[$i]}$leading_whitespace$whitespace_separator"
	output_months+=$(echo -n "$output_month")

	if (( $i == ${#months[@]}-1 )); then
	    local trail=${output_months##*[^[:blank:]]}
	    output_months="${output_months%${trail}}"
	fi

	# Format week section
	[ -z "$output_week" ] && output_week="$week" || output_week="$output_week$whitespace_separator$week"
	
        # Format days section
    done
    local daysLineCount=$(($(echo "${days[0]}" | wc -l)))
    for (( j = 1; j <= $daysLineCount; j++)); do
	for (( k = 0; k < ${#months[@]}; k++)); do
	    line=$(echo "${days[k]}" | sed -n "$j p")

	    ! [[ "${line: -1}" == '>' ]] && (( "${#line}" > 20 )) && line="${line::-1}"

	    if [ $((k+1)) == ${#months[@]} ]; then
		output_days="$(echo "$output_days$line" )"
		continue
	    fi

	    output_days="$(echo "$output_days$line$whitespace_separator" )"
	    
	done
	output_days="$output_days\n"
    done


    output=$(echo -e "${output_months}\n\n${output_week}\n${output_days}")
}

# Format calendar style and trim each individual piece into separated variables
format_calendar "$calendar"

# Colorize days in calendar
targetDates+=("01/01")

colorize "red"

# Format output to notify-send
format_output "$output"

#echo "$output"

notify-send -u low "Notifical" "$output"

exit 0
